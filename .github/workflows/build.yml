name: Release

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.md'
  release:
    types:
      - published

jobs:
  build:
    name: Build and Release ${{ matrix.os }}-${{ matrix.arch }}${{ matrix.goarm }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # MacOS
          - os: darwin
            arch: amd64
            bit: "64"
            ext: zip
          - os: darwin
            arch: arm64
            bit: "64"
            ext: zip
          # Linux
          - os: linux
            arch: 386
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: amd64
            bit: "64"
            ext: tar.gz
          - os: linux
            arch: arm64
            bit: "64"
            ext: tar.gz
          - os: linux
            arch: arm
            goarm: 5
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: arm
            goarm: 6
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: arm
            goarm: 7
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: mips
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: mips64
            bit: "64"
            ext: tar.gz
          - os: linux
            arch: mipsle
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: mips64le
            bit: "64"
            ext: tar.gz
          # Windows
          - os: windows
            arch: 386
            bit: "32"
            ext: zip
            original_ext: .exe
          - os: windows
            arch: amd64
            bit: "64"
            ext: zip
          - os: windows
            arch: arm64
            bit: "64"
            ext: zip
            original_ext: .exe

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.X'

      - name: Get the version
        run: |
          echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
          echo "OUTPUT_NAME=CloudflareST_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.goarm }}${{ matrix. original_ext}}" >> $GITHUB_ENV
          echo "ZIP_NAME=CloudflareST_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.goarm }}.${{ matrix. ext}}" >> $GITHUB_ENV

      - name: Build
        run: |
          echo "Building for OS: ${{ matrix.os }}, Arch: ${{ matrix.arch }}, Version: ${{ env.VERSION }}"
          output_name="CloudflareST_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.goarm }}"
          echo "Output name: ${{ env.OUTPUT_NAME }}"

          command="GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} GOARM=${{ matrix.goarm }} go build -ldflags \"-s -w -X main.version=${{ env.VERSION }}\" -v -o ${{ env.OUTPUT_NAME }}"
          echo "Running command: $command"
          eval $command

          if [ "${{ matrix.ext }}" = "zip" ]; then
            zip "${{ env.ZIP_NAME }}" "${{ env.OUTPUT_NAME }}"
          else
            tar cvzf "${{ env.ZIP_NAME }}" "${{ env.OUTPUT_NAME }}"
          fi
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.ZIP_NAME }}

      - name: Upload packages
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ github.token }}
          file: ${{ env.ZIP_NAME }}
          tag: ${{ github.ref }}
          file_glob: true
