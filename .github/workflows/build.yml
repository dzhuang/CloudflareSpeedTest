name: Release

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.md'
  release:
    types:
      - published

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.x]
        include:
          # MacOS
          - os: darwin
            arch: amd64
            bit: "64"
            ext: zip
          - os: darwin
            arch: arm64
            bit: "64"
            ext: zip
          # Linux
          - os: linux
            arch: 386
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: amd64
            bit: "64"
            ext: tar.gz
          - os: linux
            arch: arm64
            bit: "64"
            ext: tar.gz
          - os: linux
            arch: arm
            arm_version: 5
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: arm
            arm_version: 6
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: arm
            arm_version: 7
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: mips
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: mips64
            bit: "64"
            ext: tar.gz
          - os: linux
            arch: mipsle
            bit: "32"
            ext: tar.gz
          - os: linux
            arch: mips64le
            bit: "64"
            ext: tar.gz
          # Windows
          - os: windows
            arch: 386
            bit: "32"
            ext: zip
          - os: windows
            arch: amd64
            bit: "64"
            ext: zip
          - os: windows
            arch: arm64
            bit: "64"
            ext: zip

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build
        run: |
          # 构建输出文件名
          output_name="CloudflareST_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.bit }}"
          if [ "${{ matrix.arch }}" = "arm" ]; then
            output_name="${output_name}v${{ matrix.arm_version }}"
          fi
          output_name="${output_name}_${{ env.VERSION }}"
          # 构建命令
          env GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags "-s -w -X main.version=${{ env.VERSION }}" -v -o $output_name
          # 打包
          if [ "${{ matrix.ext }}" = "zip" ]; then
            zip $output_name.${{ matrix.ext }} $output_name
          else
            tar cvzf $output_name.${{ matrix.ext }} $output_name
          fi

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.bit }}-${{ env.VERSION }}
          path: CloudflareST_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.bit }}_${{ env.VERSION }}*.${{ matrix.ext }}

      - name: Upload packages
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ github.token }}
          file: "CloudflareST_*"
          tag: ${{ github.ref }}
          file_glob: true
